{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/player.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/test/test.component.ts","./src/app/components/test/test.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Player } from '../models/Player';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PlayerService {\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    getPlayerInfo(uuid: string): Observable<Player> {\r\n        return this.http.get<Player>(`https://www.mc-heads.net/minecraft/profile/${uuid}`);\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BlockeyHockeyWebApp';\n}\n","<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './components/test/test.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlayerService } from 'src/app/services/player.service';\n\n@Component({\n    selector: 'app-test',\n    templateUrl: './test.component.html'\n})\nexport class TestComponent implements OnInit {\n\n    public name = '';\n    public uuid = '';\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private playerService: PlayerService\n    ) { }\n\n    ngOnInit(): void {\n\n        this.name = this.getUsernameFromAddress();\n        this.playerService.getPlayerInfo(this.name).subscribe(\n            (data) => {\n                if (data.name && data.id) {\n                    this.name = data.name;\n                    this.uuid = data.id;\n                }\n                console.log(data);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n    }\n\n    getUsernameFromAddress(): string {\n        const url = window.location.href;\n        const lastSlash = url.lastIndexOf('/');\n        return url.substr(lastSlash + 1);\n    }\n\n    search(name: string): void {\n        this.router.navigate([`/u/${name}`]);\n    }\n\n}\n","<div class=\"p-10\">\n    <h1 class=\"text-4xl\">{{ this.name }}</h1>\n    <h2 class=\"text-2xl\"> {{ this.uuid }}</h2>\n\n    <form (submit)=\"search(username.value)\" action=\"\" class=\"flex flex-row space-x-2 mt-10\">\n        <input type=\"text\" placeholder=\"Minecraft username\"\n               class=\"my-auto\"\n               #username>\n        <button type=\"submit\"\n                class=\"flex bg-green-400 p-2 rounded text-white my-auto\">Search</button>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './components/test/test.component';\n\nconst routes: Routes = [\n  { path: 'u/:username', component: TestComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}